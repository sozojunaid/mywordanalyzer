{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","filter","element","length","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","setInterval","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8f20c8e8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  \r\n  return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/\">About</a>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"d-flex\">\r\n               \r\n\r\n                </form>\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                </div>\r\n                </div>\r\n    </div>\r\n</nav>\r\n  )\r\n}\r\n","\r\nimport React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const [text, setText] = useState('Enter The Text');\r\n    \r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n       setText(newText)\r\n       props.showAlert(\"Converted To UpperCase!\",\"success\");\r\n\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n       setText(newText)\r\n       props.showAlert(\"Converted To LowerCase!\",\"success\");\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText =(\"\");\r\n       setText(newText)\r\n       props.showAlert(\"TEXT Cleared !!!\",\"success\");\r\n\r\n    }\r\n    const handleCopy =()=>{\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert(\"Copied To Clipboard!\",\"success\");\r\n    }\r\n    const handleExtraSpaces =()=>{\r\n      let newText =text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removed\",\"success\");\r\n\r\n    }\r\n\r\n\r\n    const HandleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n\r\n    }\r\n   \r\n   // text= \"New text\"; // Wrong way to change the state\r\n   // setText(\"new Text\"); Correct way to change the state\r\n  return (\r\n    <>\r\n       <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1> \r\n        <div className=\"mb-3\">\r\n          \r\n        <textarea className=\"form-control\" value={text} onChange={HandleOnChange} style={{backgroundColor : props.mode==='dark'?'#545454':'white',color: props.mode==='dark'?'white':'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove ExtraSpaces</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n  </div>\r\n  <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}} >\r\n    <h2>Your Text Summary</h2>\r\n    <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} Characters</p>\r\n    <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n    <div className=\"container my-3\" >\r\n    <h1>Preview</h1>\r\n    <p>{text.length>0?text:\"ENTER ABOVE TO PREVIEW\"}</p>\r\n    </div>\r\n    </div>\r\n\r\n\r\n    \r\n\r\n\r\n    </>\r\n    \r\n  )\r\n}\r\n","\n\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\"; \n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message,type)=>{\n  setAlert({\n    msg: message,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 3500);\n  }\n  \n  const toggleMode = ()=> {\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor ='#41424C';\n      showAlert(\"Dark mode has been enabled!\",\"success\");\n      document.title =\"WordAnalyzer - Darkmode\" ;\n      setInterval(() => {\n        document.title =\"WordAnalyzer\" ;\n      }, 2000);\n      setInterval(() => {\n        document.title =\"MADE BY JUNAID KHAN\" ;\n      }, 1600);\n    }\n   else{\n     setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled!\",\"success\");\n      document.title =\"WordAnalyzer - Home\" ;\n   }\n     \n  }\n  return (\n    <>\n      <Navbar title=\"Word Analyzer By Junaid\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <TextForm showAlert={showAlert} heading=\"To Analyze Write Text Down Below :\" mode={mode}/> \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}